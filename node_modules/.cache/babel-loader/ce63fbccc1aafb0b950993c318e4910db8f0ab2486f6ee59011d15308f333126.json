{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RISHABH SINGH\\\\OneDrive\\\\Desktop\\\\project-management-dashboard\\\\src\\\\component\\\\Dashboard\\\\EmployeeDashboard\\\\EmployeeDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getTasksForProject } from \"../../../firestoreService\";\nimport { getAuth, signOut } from \"firebase/auth\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmployeeDashboard({\n  projectId\n}) {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentUserEmail, setCurrentUserEmail] = useState(\"\"); // Store the current user's email\n  const navigate = useNavigate(); // For navigation after logging out\n\n  // Get the logged-in user's email\n  useEffect(() => {\n    const auth = getAuth();\n    const user = auth.currentUser;\n    if (user) {\n      setCurrentUserEmail(user.email); // Set the user's email\n    }\n  }, []);\n\n  // Fetch tasks for a specific project\n  useEffect(() => {\n    console.log(\"useEffect triggered\");\n    const fetchTasks = async () => {\n      if (!projectId) return; // Ensure projectId exists\n      setLoading(true);\n      try {\n        // Fetch tasks and filter them based on the current user's email (assignedTo)\n        const fetchedTasks = await getTasksForProject(projectId);\n        console.log(\"Fetched tasks:\", fetchedTasks);\n        console.log(\"Current user email:\", currentUserEmail);\n        const filteredTasks = fetchedTasks.filter(task => task.assignedTo === currentUserEmail); // Only show tasks assigned to the current user\n        setTasks(filteredTasks); // Store tasks in state\n      } catch (e) {\n        console.error(\"Error fetching tasks: \", e);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTasks();\n  }, [projectId, currentUserEmail]); // Depend on projectId and currentUserEmail\n\n  // Logout logic\n  const handleLogout = async () => {\n    try {\n      await signOut(getAuth()); // Sign out the user\n      console.log(\"User logged out\");\n      navigate(\"/\"); // Redirect to login page after logout\n    } catch (e) {\n      console.error(\"Error logging out: \", e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Employee Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading tasks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), \": \", task.description, \" (Status: \", task.status, \")\"]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No tasks assigned.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(EmployeeDashboard, \"f1QVWKUhl6pOiMm6LQNt+2UV+x4=\", false, function () {\n  return [useNavigate];\n});\n_c = EmployeeDashboard;\nexport default EmployeeDashboard;\nvar _c;\n$RefreshReg$(_c, \"EmployeeDashboard\");","map":{"version":3,"names":["React","useState","useEffect","getTasksForProject","getAuth","signOut","useNavigate","jsxDEV","_jsxDEV","EmployeeDashboard","projectId","_s","tasks","setTasks","loading","setLoading","currentUserEmail","setCurrentUserEmail","navigate","auth","user","currentUser","email","console","log","fetchTasks","fetchedTasks","filteredTasks","filter","task","assignedTo","e","error","handleLogout","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","name","description","status","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/RISHABH SINGH/OneDrive/Desktop/project-management-dashboard/src/component/Dashboard/EmployeeDashboard/EmployeeDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getTasksForProject } from \"../../../firestoreService\";\r\nimport { getAuth, signOut } from \"firebase/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction EmployeeDashboard({ projectId }) {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentUserEmail, setCurrentUserEmail] = useState(\"\"); // Store the current user's email\r\n  const navigate = useNavigate(); // For navigation after logging out\r\n\r\n  // Get the logged-in user's email\r\n  useEffect(() => {\r\n    const auth = getAuth();\r\n    const user = auth.currentUser;\r\n    if (user) {\r\n      setCurrentUserEmail(user.email); // Set the user's email\r\n    }\r\n  }, []);\r\n\r\n  // Fetch tasks for a specific project\r\n  useEffect(() => {\r\n    console.log(\"useEffect triggered\");\r\n    const fetchTasks = async () => {\r\n      if (!projectId) return; // Ensure projectId exists\r\n      setLoading(true);\r\n      try {\r\n        // Fetch tasks and filter them based on the current user's email (assignedTo)\r\n        const fetchedTasks = await getTasksForProject(projectId);\r\n        console.log(\"Fetched tasks:\", fetchedTasks);\r\n        console.log(\"Current user email:\", currentUserEmail);\r\n        const filteredTasks = fetchedTasks.filter(\r\n          (task) => task.assignedTo === currentUserEmail\r\n        ); // Only show tasks assigned to the current user\r\n        setTasks(filteredTasks); // Store tasks in state\r\n      } catch (e) {\r\n        console.error(\"Error fetching tasks: \", e);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTasks();\r\n  }, [projectId, currentUserEmail]); // Depend on projectId and currentUserEmail\r\n\r\n  // Logout logic\r\n  const handleLogout = async () => {\r\n    try {\r\n      await signOut(getAuth()); // Sign out the user\r\n      console.log(\"User logged out\");\r\n      navigate(\"/\"); // Redirect to login page after logout\r\n    } catch (e) {\r\n      console.error(\"Error logging out: \", e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Employee Dashboard</h1>\r\n      {loading && <p>Loading tasks...</p>}\r\n      <ul>\r\n        {tasks.length > 0 ? (\r\n          tasks.map((task) => (\r\n            <li key={task.id}>\r\n              <strong>{task.name}</strong>: {task.description} (Status: {task.status})\r\n            </li>\r\n          ))\r\n        ) : (\r\n          <p>No tasks assigned.</p>\r\n        )}\r\n      </ul>\r\n      {/* Logout Button */}\r\n      <button onClick={handleLogout}>Logout</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}