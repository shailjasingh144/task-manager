{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RISHABH SINGH\\\\OneDrive\\\\Desktop\\\\project-management-dashboard\\\\src\\\\component\\\\Dashboard\\\\EmployeeDashboard\\\\EmployeeDashboard.js\",\n  _s = $RefreshSig$();\n// src/components/EmployeeDashboard/EmployeeDashboard.jsx\n\nimport React, { useState, useEffect } from \"react\";\nimport { getTasksForProject } from \"../../../firestoreService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmployeeDashboard({\n  projectId\n}) {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Fetch tasks for a specific project\n  useEffect(() => {\n    const fetchTasks = async () => {\n      setLoading(true);\n      try {\n        const fetchedTasks = await getTasksForProject(projectId);\n        setTasks(fetchedTasks); // Store tasks in state\n      } catch (e) {\n        console.error(\"Error fetching tasks: \", e);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTasks();\n  }, [projectId]); // Depend on projectId so tasks are fetched whenever projectId changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Employee Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading tasks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), \": \", task.description, \" (Status: \", task.status, \")\"]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(EmployeeDashboard, \"Pagxvp8rtPw6MBgF7eSYjucQaJI=\");\n_c = EmployeeDashboard;\nexport default EmployeeDashboard;\nvar _c;\n$RefreshReg$(_c, \"EmployeeDashboard\");","map":{"version":3,"names":["React","useState","useEffect","getTasksForProject","jsxDEV","_jsxDEV","EmployeeDashboard","projectId","_s","tasks","setTasks","loading","setLoading","fetchTasks","fetchedTasks","e","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","name","description","status","id","_c","$RefreshReg$"],"sources":["C:/Users/RISHABH SINGH/OneDrive/Desktop/project-management-dashboard/src/component/Dashboard/EmployeeDashboard/EmployeeDashboard.js"],"sourcesContent":["// src/components/EmployeeDashboard/EmployeeDashboard.jsx\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { getTasksForProject } from \"../../../firestoreService\";\r\n\r\nfunction EmployeeDashboard({ projectId }) {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Fetch tasks for a specific project\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const fetchedTasks = await getTasksForProject(projectId);\r\n        setTasks(fetchedTasks); // Store tasks in state\r\n      } catch (e) {\r\n        console.error(\"Error fetching tasks: \", e);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTasks();\r\n  }, [projectId]); // Depend on projectId so tasks are fetched whenever projectId changes\r\n\r\n  return (\r\n    <div>\r\n      <h1>Employee Dashboard</h1>\r\n      {loading && <p>Loading tasks...</p>}\r\n      <ul>\r\n        {tasks.map((task) => (\r\n          <li key={task.id}>\r\n            <strong>{task.name}</strong>: {task.description} (Status: {task.status})\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeDashboard;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,kBAAkB,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,SAASC,iBAAiBA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACxC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7BD,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACF,MAAME,YAAY,GAAG,MAAMX,kBAAkB,CAACI,SAAS,CAAC;QACxDG,QAAQ,CAACI,YAAY,CAAC,CAAC,CAAC;MAC1B,CAAC,CAAC,OAAOC,CAAC,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,CAAC,CAAC;MAC5C,CAAC,SAAS;QACRH,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACN,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEjB,oBACEF,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC1BX,OAAO,iBAAIN,OAAA;MAAAa,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACnCjB,OAAA;MAAAa,QAAA,EACGT,KAAK,CAACc,GAAG,CAAEC,IAAI,iBACdnB,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,EAASM,IAAI,CAACC;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,MAAE,EAACE,IAAI,CAACE,WAAW,EAAC,YAAU,EAACF,IAAI,CAACG,MAAM,EAAC,GACzE;MAAA,GAFSH,IAAI,CAACI,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACd,EAAA,CAlCQF,iBAAiB;AAAAuB,EAAA,GAAjBvB,iBAAiB;AAoC1B,eAAeA,iBAAiB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}