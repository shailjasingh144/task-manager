{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RISHABH SINGH\\\\OneDrive\\\\Desktop\\\\project-management-dashboard\\\\src\\\\component\\\\Dashboard\\\\ManagerDashboard\\\\ManagerDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getProjects, addProject, addTask, getTasksForProject } from \"../../../firestoreService\";\nimport { getAuth, signOut } from \"firebase/auth\"; // Firebase authentication for logging out\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ManagerDashboard() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newTask, setNewTask] = useState({\n    name: \"\",\n    description: \"\",\n    assignedTo: \"\"\n  }); // New task data\n  const [projectId, setProjectId] = useState(\"\"); // Track current project for task assignment\n  const auth = getAuth();\n  const navigate = useNavigate();\n\n  // Fetch projects from Firestore\n  useEffect(() => {\n    const fetchProjects = async () => {\n      setLoading(true);\n      try {\n        const fetchedProjects = await getProjects();\n        setProjects(fetchedProjects); // Save fetched projects to state\n      } catch (e) {\n        console.error(\"Error fetching projects: \", e);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProjects();\n  }, []);\n\n  // Function to handle adding a new project\n  const handleAddProject = async () => {\n    const newProject = {\n      name: \"New Project\",\n      description: \"Description of the new project\",\n      tasks: []\n    };\n    try {\n      const projectId = await addProject(newProject); // Add project to Firestore\n      setProjects(prev => [...prev, {\n        ...newProject,\n        id: projectId\n      }]); // Update state with new project\n    } catch (e) {\n      console.error(\"Error adding project: \", e);\n    }\n  };\n\n  // Function to handle adding a task to a project\n  const handleAddTask = async () => {\n    if (!newTask.name || !newTask.description || !newTask.assignedTo || !projectId) {\n      alert(\"Please fill all fields and select a project.\");\n      return;\n    }\n    const taskData = {\n      name: newTask.name,\n      description: newTask.description,\n      assignedTo: newTask.assignedTo\n    };\n    try {\n      await addTask(projectId, taskData); // Add task to Firestore under the selected project\n      alert(\"Task added successfully!\");\n\n      // Clear task input fields after adding the task\n      setNewTask({\n        name: \"\",\n        description: \"\",\n        assignedTo: \"\"\n      });\n\n      // Optionally, fetch updated tasks for the selected project\n      const updatedTasks = await getTasksForProject(projectId);\n      console.log(updatedTasks); // You can update the UI with these tasks if needed\n    } catch (e) {\n      console.error(\"Error adding task: \", e);\n    }\n  };\n\n  // Function to handle log out\n  const handleLogout = async () => {\n    try {\n      await signOut(auth); // Firebase sign out\n      navigate(\"/login\"); // Redirect to login page after logging out\n    } catch (e) {\n      console.error(\"Error signing out: \", e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Manager Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddProject,\n      disabled: loading,\n      children: loading ? \"Adding...\" : \"Add New Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: project.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), \": \", project.description, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setProjectId(project.id),\n          children: \"Select Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, project.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), projectId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Assign Task to Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task Name\",\n        value: newTask.name,\n        onChange: e => setNewTask({\n          ...newTask,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task Description\",\n        value: newTask.description,\n        onChange: e => setNewTask({\n          ...newTask,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Assign to (Employee Email)\",\n        value: newTask.assignedTo,\n        onChange: e => setNewTask({\n          ...newTask,\n          assignedTo: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        disabled: loading,\n        children: loading ? \"Assigning...\" : \"Assign Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(ManagerDashboard, \"Mt1QKvJHpEY/WVUVHk2V61FSJE4=\", false, function () {\n  return [useNavigate];\n});\n_c = ManagerDashboard;\nexport default ManagerDashboard;\nvar _c;\n$RefreshReg$(_c, \"ManagerDashboard\");","map":{"version":3,"names":["React","useState","useEffect","getProjects","addProject","addTask","getTasksForProject","getAuth","signOut","useNavigate","jsxDEV","_jsxDEV","ManagerDashboard","_s","projects","setProjects","loading","setLoading","newTask","setNewTask","name","description","assignedTo","projectId","setProjectId","auth","navigate","fetchProjects","fetchedProjects","e","console","error","handleAddProject","newProject","tasks","prev","id","handleAddTask","alert","taskData","updatedTasks","log","handleLogout","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","map","project","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/RISHABH SINGH/OneDrive/Desktop/project-management-dashboard/src/component/Dashboard/ManagerDashboard/ManagerDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getProjects, addProject, addTask, getTasksForProject } from \"../../../firestoreService\";\r\nimport { getAuth, signOut } from \"firebase/auth\"; // Firebase authentication for logging out\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction ManagerDashboard() {\r\n  const [projects, setProjects] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [newTask, setNewTask] = useState({ name: \"\", description: \"\", assignedTo: \"\" }); // New task data\r\n  const [projectId, setProjectId] = useState(\"\"); // Track current project for task assignment\r\n  const auth = getAuth();\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch projects from Firestore\r\n  useEffect(() => {\r\n    const fetchProjects = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const fetchedProjects = await getProjects();\r\n        setProjects(fetchedProjects); // Save fetched projects to state\r\n      } catch (e) {\r\n        console.error(\"Error fetching projects: \", e);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProjects();\r\n  }, []);\r\n\r\n  // Function to handle adding a new project\r\n  const handleAddProject = async () => {\r\n    const newProject = {\r\n      name: \"New Project\",\r\n      description: \"Description of the new project\",\r\n      tasks: [],\r\n    };\r\n\r\n    try {\r\n      const projectId = await addProject(newProject); // Add project to Firestore\r\n      setProjects((prev) => [...prev, { ...newProject, id: projectId }]); // Update state with new project\r\n    } catch (e) {\r\n      console.error(\"Error adding project: \", e);\r\n    }\r\n  };\r\n\r\n  // Function to handle adding a task to a project\r\n  const handleAddTask = async () => {\r\n    if (!newTask.name || !newTask.description || !newTask.assignedTo || !projectId) {\r\n      alert(\"Please fill all fields and select a project.\");\r\n      return;\r\n    }\r\n\r\n    const taskData = {\r\n      name: newTask.name,\r\n      description: newTask.description,\r\n      assignedTo: newTask.assignedTo,\r\n    };\r\n\r\n    try {\r\n      await addTask(projectId, taskData); // Add task to Firestore under the selected project\r\n      alert(\"Task added successfully!\");\r\n\r\n      // Clear task input fields after adding the task\r\n      setNewTask({ name: \"\", description: \"\", assignedTo: \"\" });\r\n\r\n      // Optionally, fetch updated tasks for the selected project\r\n      const updatedTasks = await getTasksForProject(projectId);\r\n      console.log(updatedTasks); // You can update the UI with these tasks if needed\r\n    } catch (e) {\r\n      console.error(\"Error adding task: \", e);\r\n    }\r\n  };\r\n\r\n  // Function to handle log out\r\n  const handleLogout = async () => {\r\n    try {\r\n      await signOut(auth); // Firebase sign out\r\n      navigate(\"/login\"); // Redirect to login page after logging out\r\n    } catch (e) {\r\n      console.error(\"Error signing out: \", e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Manager Dashboard</h1>\r\n      <button onClick={handleLogout}>Logout</button> {/* Logout Button */}\r\n      <button onClick={handleAddProject} disabled={loading}>\r\n        {loading ? \"Adding...\" : \"Add New Project\"}\r\n      </button>\r\n\r\n      <h2>Projects</h2>\r\n      <ul>\r\n        {projects.map((project) => (\r\n          <li key={project.id}>\r\n            <strong>{project.name}</strong>: {project.description}\r\n            {/* Select project to add tasks */}\r\n            <button onClick={() => setProjectId(project.id)}>Select Project</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {/* Task Assignment */}\r\n      {projectId && (\r\n        <div>\r\n          <h3>Assign Task to Project</h3>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Task Name\"\r\n            value={newTask.name}\r\n            onChange={(e) => setNewTask({ ...newTask, name: e.target.value })}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Task Description\"\r\n            value={newTask.description}\r\n            onChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Assign to (Employee Email)\"\r\n            value={newTask.assignedTo}\r\n            onChange={(e) => setNewTask({ ...newTask, assignedTo: e.target.value })}\r\n          />\r\n          <button onClick={handleAddTask} disabled={loading}>\r\n            {loading ? \"Assigning...\" : \"Assign Task\"}\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManagerDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}