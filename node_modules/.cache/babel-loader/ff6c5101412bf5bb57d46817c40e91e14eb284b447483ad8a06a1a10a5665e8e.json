{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RISHABH SINGH\\\\OneDrive\\\\Desktop\\\\project-management-dashboard\\\\src\\\\component\\\\Dashboard\\\\ManagerDashboard\\\\ManagerDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getProjects, addProject, addTask, getTasksForProject } from \"../../../firestoreService\";\nimport { getUsersByRole } from \"../../../firestoreService\"; // Import the function to get users by role\nimport { getAuth, signOut } from \"firebase/auth\"; // Firebase authentication for logging out\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ManagerDashboard() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [employees, setEmployees] = useState([]); // State to store employees\n  const [loading, setLoading] = useState(false);\n  const [newTask, setNewTask] = useState({\n    name: \"\",\n    description: \"\",\n    assignedTo: \"\"\n  }); // New task data\n  const [projectId, setProjectId] = useState(\"\"); // Track current project for task assignment\n  const [showAssignTask, setShowAssignTask] = useState(false); // State to control visibility of task assignment form\n  const auth = getAuth();\n  const navigate = useNavigate();\n\n  // Fetch projects from Firestore\n  useEffect(() => {\n    const fetchProjects = async () => {\n      setLoading(true);\n      try {\n        const fetchedProjects = await getProjects();\n        setProjects(fetchedProjects); // Save fetched projects to state\n      } catch (e) {\n        console.error(\"Error fetching projects: \", e);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProjects();\n  }, []);\n\n  // Fetch employees from Firestore (role: \"Employee\")\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      setLoading(true);\n      try {\n        const fetchedEmployees = await getUsersByRole(\"Employee\"); // Fetch employees\n        setEmployees(fetchedEmployees); // Save employees to state\n      } catch (e) {\n        console.error(\"Error fetching employees: \", e);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchEmployees();\n  }, []);\n\n  // Function to handle adding a new project\n  const handleAddProject = async () => {\n    const newProject = {\n      name: \"New Project\",\n      description: \"Description of the new project\",\n      tasks: []\n    };\n    try {\n      const projectId = await addProject(newProject); // Add project to Firestore\n      setProjects(prev => [...prev, {\n        ...newProject,\n        id: projectId\n      }]); // Update state with new project\n    } catch (e) {\n      console.error(\"Error adding project: \", e);\n    }\n  };\n\n  // Function to handle adding a task to a project\n  const handleAddTask = async () => {\n    if (!newTask.name || !newTask.description || !newTask.assignedTo || !projectId) {\n      alert(\"Please fill all fields and select a project.\");\n      return;\n    }\n    const taskData = {\n      name: newTask.name,\n      description: newTask.description,\n      assignedTo: newTask.assignedTo\n    };\n    try {\n      await addTask(projectId, taskData); // Add task to Firestore under the selected project\n      alert(\"Task added successfully!\");\n\n      // Clear task input fields after adding the task\n      setNewTask({\n        name: \"\",\n        description: \"\",\n        assignedTo: \"\"\n      });\n\n      // Optionally, fetch updated tasks for the selected project\n      const updatedTasks = await getTasksForProject(projectId);\n      console.log(updatedTasks); // You can update the UI with these tasks if needed\n\n      // Hide the task assignment form after task is added\n      setShowAssignTask(false);\n    } catch (e) {\n      console.error(\"Error adding task: \", e);\n    }\n  };\n\n  // Function to handle log out\n  const handleLogout = async () => {\n    try {\n      await signOut(auth); // Firebase sign out\n      navigate(\"/\"); // Redirect to login page after logging out\n    } catch (e) {\n      console.error(\"Error signing out: \", e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Manager Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddProject,\n      disabled: loading,\n      children: loading ? \"Adding...\" : \"Add New Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: project.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), \": \", project.description, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            console.log(\"Selected Project ID:\", project.id);\n            setProjectId(project.id);\n            setShowAssignTask(true); // Show task assignment form when project is selected \n          },\n          children: \"Select Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, project.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), showAssignTask && projectId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Assign Task to Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task Name\",\n        value: newTask.name,\n        onChange: e => setNewTask({\n          ...newTask,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Task Description\",\n        value: newTask.description,\n        onChange: e => setNewTask({\n          ...newTask,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newTask.assignedTo,\n        onChange: e => setNewTask({\n          ...newTask,\n          assignedTo: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Employee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: employee.email,\n          children: [employee.username, \" (\", employee.email, \")\"]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddTask,\n        disabled: loading,\n        children: loading ? \"Assigning...\" : \"Assign Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(ManagerDashboard, \"yZyGo5agpApHaCSePZuqXdKFz5k=\", false, function () {\n  return [useNavigate];\n});\n_c = ManagerDashboard;\nexport default ManagerDashboard;\nvar _c;\n$RefreshReg$(_c, \"ManagerDashboard\");","map":{"version":3,"names":["React","useState","useEffect","getProjects","addProject","addTask","getTasksForProject","getUsersByRole","getAuth","signOut","useNavigate","jsxDEV","_jsxDEV","ManagerDashboard","_s","projects","setProjects","employees","setEmployees","loading","setLoading","newTask","setNewTask","name","description","assignedTo","projectId","setProjectId","showAssignTask","setShowAssignTask","auth","navigate","fetchProjects","fetchedProjects","e","console","error","fetchEmployees","fetchedEmployees","handleAddProject","newProject","tasks","prev","id","handleAddTask","alert","taskData","updatedTasks","log","handleLogout","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","map","project","type","placeholder","value","onChange","target","employee","email","username","_c","$RefreshReg$"],"sources":["C:/Users/RISHABH SINGH/OneDrive/Desktop/project-management-dashboard/src/component/Dashboard/ManagerDashboard/ManagerDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getProjects, addProject, addTask, getTasksForProject } from \"../../../firestoreService\";\r\nimport { getUsersByRole } from \"../../../firestoreService\"; // Import the function to get users by role\r\nimport { getAuth, signOut } from \"firebase/auth\"; // Firebase authentication for logging out\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction ManagerDashboard() {\r\n  const [projects, setProjects] = useState([]);\r\n  const [employees, setEmployees] = useState([]); // State to store employees\r\n  const [loading, setLoading] = useState(false);\r\n  const [newTask, setNewTask] = useState({ name: \"\", description: \"\", assignedTo: \"\" }); // New task data\r\n  const [projectId, setProjectId] = useState(\"\"); // Track current project for task assignment\r\n  const [showAssignTask, setShowAssignTask] = useState(false); // State to control visibility of task assignment form\r\n  const auth = getAuth();\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch projects from Firestore\r\n  useEffect(() => {\r\n    const fetchProjects = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const fetchedProjects = await getProjects();\r\n        setProjects(fetchedProjects); // Save fetched projects to state\r\n      } catch (e) {\r\n        console.error(\"Error fetching projects: \", e);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProjects();\r\n  }, []);\r\n\r\n  // Fetch employees from Firestore (role: \"Employee\")\r\n  useEffect(() => {\r\n    const fetchEmployees = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const fetchedEmployees = await getUsersByRole(\"Employee\"); // Fetch employees\r\n        setEmployees(fetchedEmployees); // Save employees to state\r\n      } catch (e) {\r\n        console.error(\"Error fetching employees: \", e);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchEmployees();\r\n  }, []);\r\n\r\n  // Function to handle adding a new project\r\n  const handleAddProject = async () => {\r\n    const newProject = {\r\n      name: \"New Project\",\r\n      description: \"Description of the new project\",\r\n      tasks: [],\r\n    };\r\n\r\n    try {\r\n      const projectId = await addProject(newProject); // Add project to Firestore\r\n      setProjects((prev) => [...prev, { ...newProject, id: projectId }]); // Update state with new project\r\n    } catch (e) {\r\n      console.error(\"Error adding project: \", e);\r\n    }\r\n  };\r\n\r\n  // Function to handle adding a task to a project\r\n  const handleAddTask = async () => {\r\n    if (!newTask.name || !newTask.description || !newTask.assignedTo || !projectId) {\r\n      alert(\"Please fill all fields and select a project.\");\r\n      return;\r\n    }\r\n\r\n    const taskData = {\r\n      name: newTask.name,\r\n      description: newTask.description,\r\n      assignedTo: newTask.assignedTo,\r\n    };\r\n\r\n    try {\r\n      await addTask(projectId, taskData); // Add task to Firestore under the selected project\r\n      alert(\"Task added successfully!\");\r\n\r\n      // Clear task input fields after adding the task\r\n      setNewTask({ name: \"\", description: \"\", assignedTo: \"\" });\r\n\r\n      // Optionally, fetch updated tasks for the selected project\r\n      const updatedTasks = await getTasksForProject(projectId);\r\n      console.log(updatedTasks); // You can update the UI with these tasks if needed\r\n\r\n      // Hide the task assignment form after task is added\r\n      setShowAssignTask(false);\r\n    } catch (e) {\r\n      console.error(\"Error adding task: \", e);\r\n    }\r\n  };\r\n\r\n  // Function to handle log out\r\n  const handleLogout = async () => {\r\n    try {\r\n      await signOut(auth); // Firebase sign out\r\n      navigate(\"/\"); // Redirect to login page after logging out\r\n    } catch (e) {\r\n      console.error(\"Error signing out: \", e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Manager Dashboard</h1>\r\n      <button onClick={handleLogout}>Logout</button> {/* Logout Button */}\r\n      <button onClick={handleAddProject} disabled={loading}>\r\n        {loading ? \"Adding...\" : \"Add New Project\"}\r\n      </button>\r\n\r\n      <h2>Projects</h2>\r\n      <ul>\r\n        {projects.map((project) => (\r\n          <li key={project.id}>\r\n            <strong>{project.name}</strong>: {project.description}\r\n            {/* Select project to add tasks */}\r\n            <button onClick={() => {\r\n              console.log(\"Selected Project ID:\", project.id); \r\n              setProjectId(project.id); \r\n              setShowAssignTask(true); // Show task assignment form when project is selected \r\n            }}>Select Project</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {/* Task Assignment */}\r\n      {showAssignTask && projectId && (\r\n        <div>\r\n          <h3>Assign Task to Project</h3>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Task Name\"\r\n            value={newTask.name}\r\n            onChange={(e) => setNewTask({ ...newTask, name: e.target.value })}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Task Description\"\r\n            value={newTask.description}\r\n            onChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\r\n          />\r\n          <select\r\n            value={newTask.assignedTo}\r\n            onChange={(e) => setNewTask({ ...newTask, assignedTo: e.target.value })}\r\n          >\r\n            <option value=\"\">Select Employee</option>\r\n            {employees.map((employee) => (\r\n              <option key={employee.id} value={employee.email}>\r\n                {employee.username} ({employee.email})\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <button onClick={handleAddTask} disabled={loading}>\r\n            {loading ? \"Assigning...\" : \"Assign Task\"}\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManagerDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,UAAU,EAAEC,OAAO,EAAEC,kBAAkB,QAAQ,2BAA2B;AAChG,SAASC,cAAc,QAAQ,2BAA2B,CAAC,CAAC;AAC5D,SAASC,OAAO,EAAEC,OAAO,QAAQ,eAAe,CAAC,CAAC;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC;IAAEsB,IAAI,EAAE,EAAE;IAAEC,WAAW,EAAE,EAAE;IAAEC,UAAU,EAAE;EAAG,CAAC,CAAC,CAAC,CAAC;EACvF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAAC2B,cAAc,EAAEC,iBAAiB,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC7D,MAAM6B,IAAI,GAAGtB,OAAO,CAAC,CAAC;EACtB,MAAMuB,QAAQ,GAAGrB,WAAW,CAAC,CAAC;;EAE9B;EACAR,SAAS,CAAC,MAAM;IACd,MAAM8B,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChCZ,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACF,MAAMa,eAAe,GAAG,MAAM9B,WAAW,CAAC,CAAC;QAC3Ca,WAAW,CAACiB,eAAe,CAAC,CAAC,CAAC;MAChC,CAAC,CAAC,OAAOC,CAAC,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,CAAC,CAAC;MAC/C,CAAC,SAAS;QACRd,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDY,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA9B,SAAS,CAAC,MAAM;IACd,MAAMmC,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjCjB,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACF,MAAMkB,gBAAgB,GAAG,MAAM/B,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC;QAC3DW,YAAY,CAACoB,gBAAgB,CAAC,CAAC,CAAC;MAClC,CAAC,CAAC,OAAOJ,CAAC,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,CAAC,CAAC;MAChD,CAAC,SAAS;QACRd,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDiB,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMC,UAAU,GAAG;MACjBjB,IAAI,EAAE,aAAa;MACnBC,WAAW,EAAE,gCAAgC;MAC7CiB,KAAK,EAAE;IACT,CAAC;IAED,IAAI;MACF,MAAMf,SAAS,GAAG,MAAMtB,UAAU,CAACoC,UAAU,CAAC,CAAC,CAAC;MAChDxB,WAAW,CAAE0B,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;QAAE,GAAGF,UAAU;QAAEG,EAAE,EAAEjB;MAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IACtE,CAAC,CAAC,OAAOQ,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,CAAC,CAAC;IAC5C;EACF,CAAC;;EAED;EACA,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACvB,OAAO,CAACE,IAAI,IAAI,CAACF,OAAO,CAACG,WAAW,IAAI,CAACH,OAAO,CAACI,UAAU,IAAI,CAACC,SAAS,EAAE;MAC9EmB,KAAK,CAAC,8CAA8C,CAAC;MACrD;IACF;IAEA,MAAMC,QAAQ,GAAG;MACfvB,IAAI,EAAEF,OAAO,CAACE,IAAI;MAClBC,WAAW,EAAEH,OAAO,CAACG,WAAW;MAChCC,UAAU,EAAEJ,OAAO,CAACI;IACtB,CAAC;IAED,IAAI;MACF,MAAMpB,OAAO,CAACqB,SAAS,EAAEoB,QAAQ,CAAC,CAAC,CAAC;MACpCD,KAAK,CAAC,0BAA0B,CAAC;;MAEjC;MACAvB,UAAU,CAAC;QAAEC,IAAI,EAAE,EAAE;QAAEC,WAAW,EAAE,EAAE;QAAEC,UAAU,EAAE;MAAG,CAAC,CAAC;;MAEzD;MACA,MAAMsB,YAAY,GAAG,MAAMzC,kBAAkB,CAACoB,SAAS,CAAC;MACxDS,OAAO,CAACa,GAAG,CAACD,YAAY,CAAC,CAAC,CAAC;;MAE3B;MACAlB,iBAAiB,CAAC,KAAK,CAAC;IAC1B,CAAC,CAAC,OAAOK,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEF,CAAC,CAAC;IACzC;EACF,CAAC;;EAED;EACA,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMxC,OAAO,CAACqB,IAAI,CAAC,CAAC,CAAC;MACrBC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOG,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEF,CAAC,CAAC;IACzC;EACF,CAAC;EAED,oBACEtB,OAAA;IAAAsC,QAAA,gBACEtC,OAAA;MAAAsC,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B1C,OAAA;MAAQ2C,OAAO,EAAEN,YAAa;MAAAC,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,KAAC,eAC/C1C,OAAA;MAAQ2C,OAAO,EAAEhB,gBAAiB;MAACiB,QAAQ,EAAErC,OAAQ;MAAA+B,QAAA,EAClD/B,OAAO,GAAG,WAAW,GAAG;IAAiB;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eAET1C,OAAA;MAAAsC,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjB1C,OAAA;MAAAsC,QAAA,EACGnC,QAAQ,CAAC0C,GAAG,CAAEC,OAAO,iBACpB9C,OAAA;QAAAsC,QAAA,gBACEtC,OAAA;UAAAsC,QAAA,EAASQ,OAAO,CAACnC;QAAI;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,MAAE,EAACI,OAAO,CAAClC,WAAW,eAErDZ,OAAA;UAAQ2C,OAAO,EAAEA,CAAA,KAAM;YACrBpB,OAAO,CAACa,GAAG,CAAC,sBAAsB,EAAEU,OAAO,CAACf,EAAE,CAAC;YAC/ChB,YAAY,CAAC+B,OAAO,CAACf,EAAE,CAAC;YACxBd,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;UAC3B,CAAE;UAAAqB,QAAA,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAPnBI,OAAO,CAACf,EAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EAGJ1B,cAAc,IAAIF,SAAS,iBAC1Bd,OAAA;MAAAsC,QAAA,gBACEtC,OAAA;QAAAsC,QAAA,EAAI;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/B1C,OAAA;QACE+C,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,WAAW;QACvBC,KAAK,EAAExC,OAAO,CAACE,IAAK;QACpBuC,QAAQ,EAAG5B,CAAC,IAAKZ,UAAU,CAAC;UAAE,GAAGD,OAAO;UAAEE,IAAI,EAAEW,CAAC,CAAC6B,MAAM,CAACF;QAAM,CAAC;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE,CAAC,eACF1C,OAAA;QACE+C,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,kBAAkB;QAC9BC,KAAK,EAAExC,OAAO,CAACG,WAAY;QAC3BsC,QAAQ,EAAG5B,CAAC,IAAKZ,UAAU,CAAC;UAAE,GAAGD,OAAO;UAAEG,WAAW,EAAEU,CAAC,CAAC6B,MAAM,CAACF;QAAM,CAAC;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1E,CAAC,eACF1C,OAAA;QACEiD,KAAK,EAAExC,OAAO,CAACI,UAAW;QAC1BqC,QAAQ,EAAG5B,CAAC,IAAKZ,UAAU,CAAC;UAAE,GAAGD,OAAO;UAAEI,UAAU,EAAES,CAAC,CAAC6B,MAAM,CAACF;QAAM,CAAC,CAAE;QAAAX,QAAA,gBAExEtC,OAAA;UAAQiD,KAAK,EAAC,EAAE;UAAAX,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACxCrC,SAAS,CAACwC,GAAG,CAAEO,QAAQ,iBACtBpD,OAAA;UAA0BiD,KAAK,EAAEG,QAAQ,CAACC,KAAM;UAAAf,QAAA,GAC7Cc,QAAQ,CAACE,QAAQ,EAAC,IAAE,EAACF,QAAQ,CAACC,KAAK,EAAC,GACvC;QAAA,GAFaD,QAAQ,CAACrB,EAAE;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEhB,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACT1C,OAAA;QAAQ2C,OAAO,EAAEX,aAAc;QAACY,QAAQ,EAAErC,OAAQ;QAAA+B,QAAA,EAC/C/B,OAAO,GAAG,cAAc,GAAG;MAAa;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACxC,EAAA,CA9JQD,gBAAgB;EAAA,QAQNH,WAAW;AAAA;AAAAyD,EAAA,GARrBtD,gBAAgB;AAgKzB,eAAeA,gBAAgB;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}