{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RISHABH SINGH\\\\OneDrive\\\\Desktop\\\\task-manager\\\\src\\\\component\\\\Dashboard\\\\ManagerDashboard\\\\ManagerDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getProjects, addProject, addTask, getTasksForProject } from \"../../../firestoreService\";\nimport { getUsersByRole } from \"../../../firestoreService\"; // Import the function to get users by role\nimport { getAuth, signOut } from \"firebase/auth\"; // Firebase authentication for logging out\nimport { useNavigate } from \"react-router-dom\";\nimport EmployeeDashboard from \"../EmployeeDashboard/EmployeeDashboard\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ManagerDashboard() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [employees, setEmployees] = useState([]); // State to store employees\n  const [loading, setLoading] = useState(false);\n  const [newTask, setNewTask] = useState({\n    name: \"\",\n    description: \"\",\n    assignedTo: \"\"\n  }); // New task data\n  const [projectId, setProjectId] = useState(\"\"); // Track current project for task assignment\n  const [showAssignTask, setShowAssignTask] = useState(false); // State to control visibility of task assignment form\n  const auth = getAuth();\n  const navigate = useNavigate();\n\n  // Fetch projects from Firestore\n  useEffect(() => {\n    const fetchProjects = async () => {\n      setLoading(true);\n      try {\n        const fetchedProjects = await getProjects();\n        setProjects(fetchedProjects); // Save fetched projects to state\n      } catch (e) {\n        console.error(\"Error fetching projects: \", e);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProjects();\n  }, []);\n\n  // Fetch employees from Firestore (role: \"Employee\")\n  useEffect(() => {\n    const fetchEmployees = async () => {\n      setLoading(true);\n      try {\n        const fetchedEmployees = await getUsersByRole(\"Employee\"); // Fetch employees\n        setEmployees(fetchedEmployees); // Save employees to state\n      } catch (e) {\n        console.error(\"Error fetching employees: \", e);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchEmployees();\n  }, []);\n\n  // Function to handle adding a new project\n  const handleAddProject = async () => {\n    const newProject = {\n      name: \"New Project\",\n      description: \"Description of the new project\",\n      tasks: []\n    };\n    try {\n      const projectId = await addProject(newProject); // Add project to Firestore\n      setProjects(prev => [...prev, {\n        ...newProject,\n        id: projectId\n      }]); // Update state with new project\n    } catch (e) {\n      console.error(\"Error adding project: \", e);\n    }\n  };\n\n  // Function to handle adding a task to a project\n  const handleAddTask = async () => {\n    if (!newTask.name || !newTask.description || !newTask.assignedTo || !projectId) {\n      alert(\"Please fill all fields and select a project.\");\n      return;\n    }\n    const taskData = {\n      name: newTask.name,\n      description: newTask.description,\n      assignedTo: newTask.assignedTo\n    };\n    try {\n      await addTask(projectId, taskData); // Add task to Firestore under the selected project\n      alert(\"Task added successfully!\");\n\n      // Clear task input fields after adding the task\n      setNewTask({\n        name: \"\",\n        description: \"\",\n        assignedTo: \"\"\n      });\n\n      // Optionally, fetch updated tasks for the selected project\n      const updatedTasks = await getTasksForProject(projectId);\n      console.log(updatedTasks); // You can update the UI with these tasks if needed\n\n      // Hide the task assignment form after task is added\n      setShowAssignTask(false);\n    } catch (e) {\n      console.error(\"Error adding task: \", e);\n    }\n  };\n\n  // Function to handle log out\n  const handleLogout = async () => {\n    try {\n      await signOut(auth); // Firebase sign out\n      navigate(\"/\"); // Redirect to login page after logging out\n    } catch (e) {\n      console.error(\"Error signing out: \", e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Manager Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddProject,\n        disabled: loading,\n        children: loading ? \"Adding...\" : \"Add New Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: projects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: project.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), \": \", project.description, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              console.log(\"Selected Project ID:\", project.id);\n              setProjectId(project.id);\n              setShowAssignTask(true); // Show task assignment form when project is selected \n            },\n            children: \"Select Project\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, project.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this), showAssignTask && projectId && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Assign Task to Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Task Name\",\n          value: newTask.name,\n          onChange: e => setNewTask({\n            ...newTask,\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Task Description\",\n          value: newTask.description,\n          onChange: e => setNewTask({\n            ...newTask,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newTask.assignedTo,\n          onChange: e => setNewTask({\n            ...newTask,\n            assignedTo: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: employee.email,\n            children: [employee.username, \" (\", employee.email, \")\"]\n          }, employee.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddTask,\n          disabled: loading,\n          children: loading ? \"Assigning...\" : \"Assign Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(ManagerDashboard, \"yZyGo5agpApHaCSePZuqXdKFz5k=\", false, function () {\n  return [useNavigate];\n});\n_c = ManagerDashboard;\nexport default ManagerDashboard;\nvar _c;\n$RefreshReg$(_c, \"ManagerDashboard\");","map":{"version":3,"names":["React","useState","useEffect","getProjects","addProject","addTask","getTasksForProject","getUsersByRole","getAuth","signOut","useNavigate","EmployeeDashboard","jsxDEV","_jsxDEV","Fragment","_Fragment","ManagerDashboard","_s","projects","setProjects","employees","setEmployees","loading","setLoading","newTask","setNewTask","name","description","assignedTo","projectId","setProjectId","showAssignTask","setShowAssignTask","auth","navigate","fetchProjects","fetchedProjects","e","console","error","fetchEmployees","fetchedEmployees","handleAddProject","newProject","tasks","prev","id","handleAddTask","alert","taskData","updatedTasks","log","handleLogout","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","map","project","type","placeholder","value","onChange","target","employee","email","username","_c","$RefreshReg$"],"sources":["C:/Users/RISHABH SINGH/OneDrive/Desktop/task-manager/src/component/Dashboard/ManagerDashboard/ManagerDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { getProjects, addProject, addTask, getTasksForProject } from \"../../../firestoreService\";\r\nimport { getUsersByRole } from \"../../../firestoreService\"; // Import the function to get users by role\r\nimport { getAuth, signOut } from \"firebase/auth\"; // Firebase authentication for logging out\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport EmployeeDashboard from \"../EmployeeDashboard/EmployeeDashboard\";\r\n\r\nfunction ManagerDashboard() {\r\n  const [projects, setProjects] = useState([]);\r\n  const [employees, setEmployees] = useState([]); // State to store employees\r\n  const [loading, setLoading] = useState(false);\r\n  const [newTask, setNewTask] = useState({ name: \"\", description: \"\", assignedTo: \"\" }); // New task data\r\n  const [projectId, setProjectId] = useState(\"\"); // Track current project for task assignment\r\n  const [showAssignTask, setShowAssignTask] = useState(false); // State to control visibility of task assignment form\r\n  const auth = getAuth();\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch projects from Firestore\r\n  useEffect(() => {\r\n    const fetchProjects = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const fetchedProjects = await getProjects();\r\n        setProjects(fetchedProjects); // Save fetched projects to state\r\n      } catch (e) {\r\n        console.error(\"Error fetching projects: \", e);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProjects();\r\n  }, []);\r\n\r\n  // Fetch employees from Firestore (role: \"Employee\")\r\n  useEffect(() => {\r\n    const fetchEmployees = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const fetchedEmployees = await getUsersByRole(\"Employee\"); // Fetch employees\r\n        setEmployees(fetchedEmployees); // Save employees to state\r\n      } catch (e) {\r\n        console.error(\"Error fetching employees: \", e);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchEmployees();\r\n  }, []);\r\n\r\n  // Function to handle adding a new project\r\n  const handleAddProject = async () => {\r\n    const newProject = {\r\n      name: \"New Project\",\r\n      description: \"Description of the new project\",\r\n      tasks: [],\r\n    };\r\n\r\n    try {\r\n      const projectId = await addProject(newProject); // Add project to Firestore\r\n      setProjects((prev) => [...prev, { ...newProject, id: projectId }]); // Update state with new project\r\n    } catch (e) {\r\n      console.error(\"Error adding project: \", e);\r\n    }\r\n  };\r\n\r\n  // Function to handle adding a task to a project\r\n  const handleAddTask = async () => {\r\n    if (!newTask.name || !newTask.description || !newTask.assignedTo || !projectId) {\r\n      alert(\"Please fill all fields and select a project.\");\r\n      return;\r\n    }\r\n\r\n    const taskData = {\r\n      name: newTask.name,\r\n      description: newTask.description,\r\n      assignedTo: newTask.assignedTo,\r\n    };\r\n\r\n    try {\r\n      await addTask(projectId, taskData); // Add task to Firestore under the selected project\r\n      alert(\"Task added successfully!\");\r\n\r\n      // Clear task input fields after adding the task\r\n      setNewTask({ name: \"\", description: \"\", assignedTo: \"\" });\r\n\r\n      // Optionally, fetch updated tasks for the selected project\r\n      const updatedTasks = await getTasksForProject(projectId);\r\n      console.log(updatedTasks); // You can update the UI with these tasks if needed\r\n\r\n      // Hide the task assignment form after task is added\r\n      setShowAssignTask(false);\r\n    } catch (e) {\r\n      console.error(\"Error adding task: \", e);\r\n    }\r\n  };\r\n\r\n  // Function to handle log out\r\n  const handleLogout = async () => {\r\n    try {\r\n      await signOut(auth); // Firebase sign out\r\n      navigate(\"/\"); // Redirect to login page after logging out\r\n    } catch (e) {\r\n      console.error(\"Error signing out: \", e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n    <div>\r\n      <h1>Manager Dashboard</h1>\r\n      <button onClick={handleLogout}>Logout</button> {/* Logout Button */}\r\n      <button onClick={handleAddProject} disabled={loading}>\r\n        {loading ? \"Adding...\" : \"Add New Project\"}\r\n      </button>\r\n\r\n      <h2>Projects</h2>\r\n      <ul>\r\n        {projects.map((project) => (\r\n          <li key={project.id}>\r\n            <strong>{project.name}</strong>: {project.description}\r\n            {/* Select project to add tasks */}\r\n            <button onClick={() => {\r\n              console.log(\"Selected Project ID:\", project.id); \r\n              setProjectId(project.id); \r\n              setShowAssignTask(true); // Show task assignment form when project is selected \r\n            }}>Select Project</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {/* Task Assignment */}\r\n      {showAssignTask && projectId && (\r\n        <div>\r\n          <h3>Assign Task to Project</h3>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Task Name\"\r\n            value={newTask.name}\r\n            onChange={(e) => setNewTask({ ...newTask, name: e.target.value })}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Task Description\"\r\n            value={newTask.description}\r\n            onChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\r\n          />\r\n          <select\r\n            value={newTask.assignedTo}\r\n            onChange={(e) => setNewTask({ ...newTask, assignedTo: e.target.value })}\r\n          >\r\n            <option value=\"\">Select Employee</option>\r\n            {employees.map((employee) => (\r\n              <option key={employee.id} value={employee.email}>\r\n                {employee.username} ({employee.email})\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <button onClick={handleAddTask} disabled={loading}>\r\n            {loading ? \"Assigning...\" : \"Assign Task\"}\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n   \r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ManagerDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,UAAU,EAAEC,OAAO,EAAEC,kBAAkB,QAAQ,2BAA2B;AAChG,SAASC,cAAc,QAAQ,2BAA2B,CAAC,CAAC;AAC5D,SAASC,OAAO,EAAEC,OAAO,QAAQ,eAAe,CAAC,CAAC;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,iBAAiB,MAAM,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvE,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC;IAAEyB,IAAI,EAAE,EAAE;IAAEC,WAAW,EAAE,EAAE;IAAEC,UAAU,EAAE;EAAG,CAAC,CAAC,CAAC,CAAC;EACvF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAAC8B,cAAc,EAAEC,iBAAiB,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC7D,MAAMgC,IAAI,GAAGzB,OAAO,CAAC,CAAC;EACtB,MAAM0B,QAAQ,GAAGxB,WAAW,CAAC,CAAC;;EAE9B;EACAR,SAAS,CAAC,MAAM;IACd,MAAMiC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChCZ,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACF,MAAMa,eAAe,GAAG,MAAMjC,WAAW,CAAC,CAAC;QAC3CgB,WAAW,CAACiB,eAAe,CAAC,CAAC,CAAC;MAChC,CAAC,CAAC,OAAOC,CAAC,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,CAAC,CAAC;MAC/C,CAAC,SAAS;QACRd,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDY,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAjC,SAAS,CAAC,MAAM;IACd,MAAMsC,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjCjB,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACF,MAAMkB,gBAAgB,GAAG,MAAMlC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC;QAC3Dc,YAAY,CAACoB,gBAAgB,CAAC,CAAC,CAAC;MAClC,CAAC,CAAC,OAAOJ,CAAC,EAAE;QACVC,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEF,CAAC,CAAC;MAChD,CAAC,SAAS;QACRd,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDiB,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMC,UAAU,GAAG;MACjBjB,IAAI,EAAE,aAAa;MACnBC,WAAW,EAAE,gCAAgC;MAC7CiB,KAAK,EAAE;IACT,CAAC;IAED,IAAI;MACF,MAAMf,SAAS,GAAG,MAAMzB,UAAU,CAACuC,UAAU,CAAC,CAAC,CAAC;MAChDxB,WAAW,CAAE0B,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;QAAE,GAAGF,UAAU;QAAEG,EAAE,EAAEjB;MAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IACtE,CAAC,CAAC,OAAOQ,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,CAAC,CAAC;IAC5C;EACF,CAAC;;EAED;EACA,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACvB,OAAO,CAACE,IAAI,IAAI,CAACF,OAAO,CAACG,WAAW,IAAI,CAACH,OAAO,CAACI,UAAU,IAAI,CAACC,SAAS,EAAE;MAC9EmB,KAAK,CAAC,8CAA8C,CAAC;MACrD;IACF;IAEA,MAAMC,QAAQ,GAAG;MACfvB,IAAI,EAAEF,OAAO,CAACE,IAAI;MAClBC,WAAW,EAAEH,OAAO,CAACG,WAAW;MAChCC,UAAU,EAAEJ,OAAO,CAACI;IACtB,CAAC;IAED,IAAI;MACF,MAAMvB,OAAO,CAACwB,SAAS,EAAEoB,QAAQ,CAAC,CAAC,CAAC;MACpCD,KAAK,CAAC,0BAA0B,CAAC;;MAEjC;MACAvB,UAAU,CAAC;QAAEC,IAAI,EAAE,EAAE;QAAEC,WAAW,EAAE,EAAE;QAAEC,UAAU,EAAE;MAAG,CAAC,CAAC;;MAEzD;MACA,MAAMsB,YAAY,GAAG,MAAM5C,kBAAkB,CAACuB,SAAS,CAAC;MACxDS,OAAO,CAACa,GAAG,CAACD,YAAY,CAAC,CAAC,CAAC;;MAE3B;MACAlB,iBAAiB,CAAC,KAAK,CAAC;IAC1B,CAAC,CAAC,OAAOK,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEF,CAAC,CAAC;IACzC;EACF,CAAC;;EAED;EACA,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAM3C,OAAO,CAACwB,IAAI,CAAC,CAAC,CAAC;MACrBC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOG,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEF,CAAC,CAAC;IACzC;EACF,CAAC;EAED,oBACExB,OAAA,CAAAE,SAAA;IAAAsC,QAAA,eACAxC,OAAA;MAAAwC,QAAA,gBACExC,OAAA;QAAAwC,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1B5C,OAAA;QAAQ6C,OAAO,EAAEN,YAAa;QAAAC,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,eAC/C5C,OAAA;QAAQ6C,OAAO,EAAEhB,gBAAiB;QAACiB,QAAQ,EAAErC,OAAQ;QAAA+B,QAAA,EAClD/B,OAAO,GAAG,WAAW,GAAG;MAAiB;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eAET5C,OAAA;QAAAwC,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjB5C,OAAA;QAAAwC,QAAA,EACGnC,QAAQ,CAAC0C,GAAG,CAAEC,OAAO,iBACpBhD,OAAA;UAAAwC,QAAA,gBACExC,OAAA;YAAAwC,QAAA,EAASQ,OAAO,CAACnC;UAAI;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,MAAE,EAACI,OAAO,CAAClC,WAAW,eAErDd,OAAA;YAAQ6C,OAAO,EAAEA,CAAA,KAAM;cACrBpB,OAAO,CAACa,GAAG,CAAC,sBAAsB,EAAEU,OAAO,CAACf,EAAE,CAAC;cAC/ChB,YAAY,CAAC+B,OAAO,CAACf,EAAE,CAAC;cACxBd,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC;YAC3B,CAAE;YAAAqB,QAAA,EAAC;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAPnBI,OAAO,CAACf,EAAE;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQf,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,EAGJ1B,cAAc,IAAIF,SAAS,iBAC1BhB,OAAA;QAAAwC,QAAA,gBACExC,OAAA;UAAAwC,QAAA,EAAI;QAAsB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/B5C,OAAA;UACEiD,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,WAAW;UACvBC,KAAK,EAAExC,OAAO,CAACE,IAAK;UACpBuC,QAAQ,EAAG5B,CAAC,IAAKZ,UAAU,CAAC;YAAE,GAAGD,OAAO;YAAEE,IAAI,EAAEW,CAAC,CAAC6B,MAAM,CAACF;UAAM,CAAC;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnE,CAAC,eACF5C,OAAA;UACEiD,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,kBAAkB;UAC9BC,KAAK,EAAExC,OAAO,CAACG,WAAY;UAC3BsC,QAAQ,EAAG5B,CAAC,IAAKZ,UAAU,CAAC;YAAE,GAAGD,OAAO;YAAEG,WAAW,EAAEU,CAAC,CAAC6B,MAAM,CAACF;UAAM,CAAC;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1E,CAAC,eACF5C,OAAA;UACEmD,KAAK,EAAExC,OAAO,CAACI,UAAW;UAC1BqC,QAAQ,EAAG5B,CAAC,IAAKZ,UAAU,CAAC;YAAE,GAAGD,OAAO;YAAEI,UAAU,EAAES,CAAC,CAAC6B,MAAM,CAACF;UAAM,CAAC,CAAE;UAAAX,QAAA,gBAExExC,OAAA;YAAQmD,KAAK,EAAC,EAAE;YAAAX,QAAA,EAAC;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACxCrC,SAAS,CAACwC,GAAG,CAAEO,QAAQ,iBACtBtD,OAAA;YAA0BmD,KAAK,EAAEG,QAAQ,CAACC,KAAM;YAAAf,QAAA,GAC7Cc,QAAQ,CAACE,QAAQ,EAAC,IAAE,EAACF,QAAQ,CAACC,KAAK,EAAC,GACvC;UAAA,GAFaD,QAAQ,CAACrB,EAAE;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEhB,CACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,eACT5C,OAAA;UAAQ6C,OAAO,EAAEX,aAAc;UAACY,QAAQ,EAAErC,OAAQ;UAAA+B,QAAA,EAC/C/B,OAAO,GAAG,cAAc,GAAG;QAAa;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC,gBAGJ,CAAC;AAEP;AAACxC,EAAA,CAlKQD,gBAAgB;EAAA,QAQNN,WAAW;AAAA;AAAA4D,EAAA,GARrBtD,gBAAgB;AAoKzB,eAAeA,gBAAgB;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}